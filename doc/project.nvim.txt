*project.nvim.txt*        For Neovim >= 0.8.0        Last change: 2024 July 29

==============================================================================
Table of Contents                             *project.nvim-table-of-contents*

1. project.nvim                                    |project.nvim-project.nvim|
  - Requirements                      |project.nvim-project.nvim-requirements|
  - Features                              |project.nvim-project.nvim-features|
  - Installation                      |project.nvim-project.nvim-installation|
  - Configuration                    |project.nvim-project.nvim-configuration|
  - API                                        |project.nvim-project.nvim-api|
  - Contributing                      |project.nvim-project.nvim-contributing|
2. Links                                                  |project.nvim-links|

==============================================================================
1. project.nvim                                    *project.nvim-project.nvim*

**project.nvim** is an all in one neovim plugin written in lua that provides
superior project management.


REQUIREMENTS                          *project.nvim-project.nvim-requirements*

- Neovim >= 0.8.0


FEATURES                                  *project.nvim-project.nvim-features*

- Automagically cd to project directory using nvim lsp
    - Dependency free, does not rely on lspconfig
- If no lsp then uses pattern matching to cd to root directory
- Telescope integration `:Telescope projects`
    - Access your recently opened projects from telescope!
    - Asynchronous file io so it will not slow down vim when reading the history
        file on startup.


INSTALLATION                          *project.nvim-project.nvim-installation*

Install the plugin with your preferred package manager:


VIM-PLUG ~

>vim
    Plug 'ahmedkhalf/project.nvim'
    
    lua << EOF
      require("project_nvim").setup {
        -- your configuration comes here
        -- or leave it empty to use the default settings
        -- refer to the configuration section below
      }
    EOF
<


PACKER ~

>lua
    return {
      "TheLeoP/project.nvim",
      opts = {},
    }
<


CONFIGURATION                        *project.nvim-project.nvim-configuration*

**project.nvim** comes with the following defaults:

>lua
    {
      -- Manual mode doesn't automatically change your root directory, so you have
      -- the option to manually do so using `:ProjectRoot` command.
      manual_mode = false,
    
      -- Methods of detecting the root directory. **"lsp"** uses the native neovim
      -- lsp, while **"pattern"** uses vim-rooter like glob pattern matching. Here
      -- order matters: if one is not detected, the other is used as fallback. You
      -- can also delete or rearrange the detection methods.
      detection_methods = { "lsp", "pattern" },
    
      -- All the patterns used to detect root dir, when **"pattern"** is in
      -- detection_methods
      patterns = { ".git", "_darcs", ".hg", ".bzr", ".svn", "Makefile", "package.json" },
    
      -- Table of lsp clients to ignore by name
      -- eg: { "efm", ... }
      ignore_lsp = {},
    
      -- Don't calculate root dir on specific directories
      -- Ex: { "~/.cargo/*", ... }
      exclude_dirs = {},
    
      -- Show hidden files in telescope
      show_hidden = false,
    
      -- When set to false, you will get a message when project.nvim changes your
      -- directory.
      silent_chdir = true,
    
      -- What scope to change the directory, valid options are
      -- * global (default)
      -- * tab
      -- * win
      scope_chdir = "global",
    
      -- Path where project.nvim will store the project history
      datapath = vim.fn.stdpath("data"),
    
      -- Whether or no to call find_files on project selection
      ---@type boolean|fun(prompt_bufnr: number): boolean
      find_files = true,
    }
<

Even if you are pleased with the defaults, please note that `setup {}` must be
called for the plugin to start.


PATTERN MATCHING ~

**project.nvim**â€™s pattern engine uses the same expressions as vim-rooter,
but for your convenience, I will copy paste them here:

To specify the root is a certain directory, prefix it with `=`.

>lua
    patterns = { "=src" }
<

To specify the root has a certain directory or file (which may be a glob), just
give the name:

>lua
    patterns = { ".git", "Makefile", "*.sln", "build/env.sh" }
<

To specify the root has a certain directory as an ancestor (useful for
excluding directories), prefix it with `^`

>lua
    patterns = { "^fixtures" }
<

Tospecify the root has a certain directory as its direct ancestor / parent
(useful when you put working projects in a common directory), prefix it with
`>`

>lua
    patterns = { ">Latex" }
<

Toexclude a pattern, prefix it with `!`.

>lua
    patterns = { "!.git/worktrees", "!=extras", "!^fixtures", "!build/env.sh" }
<

List your exclusions before the patterns you do want.


TELESCOPE INTEGRATION ~

To enable telescope integration:

>lua
    require('telescope').load_extension('projects')
<


TELESCOPE PROJECTS PICKER

To use the projects picker

>lua
    require'telescope'.extensions.projects.projects{}
<


TELESCOPE MAPPINGS

**project.nvim** comes with the following mappings:

  Normal mode   Insert mode   Action
  ------------- ------------- --------------------------
  f             <c-f>         find_project_files
  b             <c-b>         browse_project_files
  d             <c-d>         delete_project
  s             <c-s>         search_in_project_files
  r             <c-r>         recent_project_files
  w             <c-w>         change_working_directory

API                                            *project.nvim-project.nvim-api*

Get a list of recent projects:

>lua
    local project_nvim = require("project_nvim")
    local recent_projects = project_nvim.get_recent_projects()
    
    vim.print(recent_projects)
<


CONTRIBUTING                          *project.nvim-project.nvim-contributing*

- All pull requests are welcome.
- If you encounter bugs please open an issue.

==============================================================================
2. Links                                                  *project.nvim-links*

1. *Telescope Integration*: https://user-images.githubusercontent.com/36672196/129409509-62340f10-4dd0-4c1a-9252-8bfedf2a9945.png

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
